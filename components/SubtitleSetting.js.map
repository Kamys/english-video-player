{"version":3,"file":"SubtitleSetting.js","sourceRoot":"","sources":["../../src/components/SubtitleSetting.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AACpD,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAA;AAClD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AAGnD,MAAM,CAAC,MAAM,eAAe,GAAG,GAAG,EAAE;IAChC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAI,QAAQ,CAAC,KAAK,CAAC,CAAA;IAC5C,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAI,QAAQ,CAAsB,IAAI,CAAC,CAAA;IAElE,MAAM,WAAW,GAAG,WAAW,CAAC,GAAG,EAAE;QACjC,SAAS,CAAC,KAAK,CAAC,CAAA;QAChB,UAAU,CAAC,IAAI,CAAC,CAAA;IACpB,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,CACH,oBAAC,MAAM,IACH,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,kGAGzB,CACZ,CAAA;KACJ;IAED,IAAI,OAAO,KAAK,IAAI,EAAE;QAClB,OAAO,CACH;YACI,oBAAC,GAAG;gBACA,oBAAC,GAAG;oBACA,iYAA0E;oBAC1E,oBAAC,eAAe,IAAC,OAAO,EAAE,IAAI,GAAI,CAChC,CACJ;YACN,oBAAC,GAAG;gBACA,oBAAC,MAAM,IAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAC,MAAM,mEAAoB,CAChE,CACP,CACN,CAAA;KACJ;IAED,OAAO,CACH;QACI,oBAAC,GAAG;YACA,oBAAC,GAAG;gBACA,+ZAA+E;gBAC/E,oBAAC,eAAe,IAAC,OAAO,EAAE,IAAI,GAAI,CAChC,CACJ;QACN,oBAAC,GAAG;YACA,oBAAC,MAAM,IAAC,OAAO,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,SAAS,EAAC,MAAM,mEAAoB,CAC3E,CACP,CACN,CAAA;AACL,CAAC,CAAA","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { Button, Col, Row } from 'react-bootstrap'\nimport { SubtitleControl } from './SubtitleControl'\nimport { SubtitleStore } from '../store/sources'\n\nexport const SubtitleSetting = () => {\n    const [isShow, setIsShow]  = useState(false)\n    const [langKey, setLangKey]  = useState<keyof SubtitleStore>(\"en\")\n\n    const handleClose = useCallback(() => {\n        setIsShow(false)\n        setLangKey(\"en\")\n    }, [])\n\n    if (!isShow) {\n        return (\n            <Button\n                size='sm'\n                onClick={() => setIsShow(true)}\n            >\n                Отстают субтитры\n            </Button>\n        )\n    }\n\n    if (langKey === 'ru') {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h4>Выберете какая дорожка должна сейчас отображаться на родном языке</h4>\n                        <SubtitleControl langKey={\"ru\"} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Button onClick={handleClose} className=\"mt-1\">Продолжить</Button>\n                </Row>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Row>\n                <Col>\n                    <h4>Выберете какая дорожка должна сейчас отображаться на иностранном языке</h4>\n                    <SubtitleControl langKey={\"en\"} />\n                </Col>\n            </Row>\n            <Row>\n                <Button onClick={() => setLangKey('ru')} className=\"mt-1\">Продолжить</Button>\n            </Row>\n        </>\n    )\n}"]}